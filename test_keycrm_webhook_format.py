#!/usr/bin/env python3
"""–¢–µ—Å—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞—à–µ–≥–æ –∫–æ–¥–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ KeyCRM."""

def test_keycrm_webhook_compatibility():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à –∫–æ–¥ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ KeyCRM."""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è KeyCRM webhook –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏")
    print("="*60)
    
    # –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ KeyCRM (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–ª—è order.change_order_status)
    keycrm_webhook_payload = {
        "event": "order.change_order_status",  # –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
        "context": {    
            "id": 67526,  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞ (–æ—Å–Ω–æ–≤–Ω–æ–π ID —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
            "source_uuid": None,
            "global_source_uuid": None,
            "status_on_source": None,
            "source_id": 246,
            "client_id": 88282,  # ID –∫–ª–∏–µ–Ω—Ç–∞
            "grand_total": 45.22,  # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
            "total_discount": 1.8,
            "margin_sum": 40.22,
            "expenses_sum": 1,
            "discount_amount": 1,
            "discount_percent": 2,
            "shipping_price": "2.00",
            "taxes": "4.00",
            "register_id": None,
            "fiscal_result": [],
            "fiscal_status": "done",
            "shipping_type_id": None,
            "manager_id": 108,
            "status_group_id": 5,
            "status_id": 1,  # ID —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ (–Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å)
            "closed_from": None,
            "status_changed_at": "2024-05-28T09:34:10.000000Z",
            "status_expired_at": None,
            "parent_id": None,
            "manager_comment": None,
            "client_comment": None,
            "payment_status": "part_paid",
            "created_at": "2024-05-28T09:24:01.000000Z",
            "updated_at": "2024-05-28T09:34:20.000000Z",
            "closed_at": "2024-05-28 09:34:10",
            "deleted_at": None,
            "ordered_at": "2024-05-28T09:24:01.000000Z",
            "source_updated_at": None,
            "payments_total": 40.02,
            "is_expired": False,
            "has_reserves": False
        }
    }
    
    print("üìÑ –¢–µ—Å—Ç–æ–≤—ã–π payload:")
    print(f"  Event: {keycrm_webhook_payload['event']}")
    print(f"  Order ID: {keycrm_webhook_payload['context']['id']}")
    print(f"  Status ID: {keycrm_webhook_payload['context']['status_id']}")
    print(f"  Client ID: {keycrm_webhook_payload['context']['client_id']}")
    print(f"  Grand Total: {keycrm_webhook_payload['context']['grand_total']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    def validate_keycrm_event(payload):
        """–ö–æ–ø–∏—è –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
        event = payload.get("event", "")
        context = payload.get("context", {})
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
        if event == "order.change_order_status":
            status_id = context.get("status_id")
            status_name = context.get("status", "").lower() if context.get("status") else ""
            
            # –í KeyCRM —Å—Ç–∞—Ç—É—Å "–ù–æ–≤—ã–π" –æ–±—ã—á–Ω–æ –∏–º–µ–µ—Ç ID = 1
            new_status_ids = [1, 2, 3]  # ID –¥–ª—è –Ω–æ–≤—ã—Ö/–∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
            new_status_names = ["new", "created", "pending", "active", "–Ω–æ–≤—ã–π"]
            
            should_process = (
                status_id in new_status_ids or 
                status_name in new_status_names
            )
            
            if should_process:
                # –°–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ KeyCRM –∏—Å–ø–æ–ª—å–∑—É–µ—Ç "id" –¥–ª—è ID –∑–∞–∫–∞–∑–∞
                order_id = context.get("id") or context.get("order_id")
                if order_id:
                    return True, {
                        "order_id": order_id,
                        "status_id": status_id,
                        "status_name": status_name,
                        "client_id": context.get("client_id"),
                        "grand_total": context.get("grand_total")
                    }
        
        return False, {}
    
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
    should_process, order_data = validate_keycrm_event(keycrm_webhook_payload)
    
    if should_process:
        print("‚úÖ –£–°–ü–ï–•: Webhook –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
        print(f"  üì¶ Order ID: {order_data['order_id']}")
        print(f"  üìä Status ID: {order_data['status_id']}")
        print(f"  üë§ Client ID: {order_data['client_id']}")
        print(f"  üí∞ Grand Total: {order_data['grand_total']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –¥–∞–ª—å—à–µ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ
        print(f"\nüîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ:")
        print(f"  1. ‚úÖ –°–æ–±—ã—Ç–∏–µ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–æ")
        print(f"  2. üîç –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–∫–∞–∑ {order_data['order_id']} —á–µ—Ä–µ–∑ API")
        print(f"  3. ‚ö†Ô∏è  API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–ø—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º)")
        print(f"  4. üìã –ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è API:")
        print(f"     - –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞")
        print(f"     - –°–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≥–æ—Ç–æ–≤–æ–∫ —Å –æ—Å—Ç–∞—Ç–∫–æ–≤")
        print(f"     - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google Sheets")
        print(f"     - –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram")
        
    else:
        print("‚ùå –û–®–ò–ë–ö–ê: Webhook –Ω–µ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω")
    
    # –¢–µ—Å—Ç –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã
    print(f"\nüìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏:")
    
    other_events = [
        "order.change_payment_status",  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
        "lead.change_lead_status"       # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤–æ—Ä–æ–Ω–∫–∏
    ]
    
    for event in other_events:
        test_payload = {
            "event": event,
            "context": {"id": 12345, "status_id": 1}
        }
        
        should_process, _ = validate_keycrm_event(test_payload)
        status = "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è" if should_process else "‚è∏Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è"
        print(f"  {status}: {event}")
    
    print(f"\n{'='*60}")
    print("‚úÖ –ù–ê–® –ö–û–î –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–í–ú–ï–°–¢–ò–ú –° –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ï–ô KeyCRM")
    print("‚ö†Ô∏è  –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞: API —Ç–æ–∫–µ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("üìã Webhook —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ - –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    print(f"{'='*60}")

if __name__ == "__main__":
    test_keycrm_webhook_compatibility()