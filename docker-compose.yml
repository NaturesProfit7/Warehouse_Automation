version: '3.8'

services:
  webhook:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: timosh-blanks-webhook
    command: uvicorn src.webhook.app:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - timosh-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: timosh-blanks-scheduler
    command: python -m src.scheduler.runner
    env_file:
      - .env
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - timosh-network

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: timosh-blanks-bot
    command: python -m src.bot
    env_file:
      - .env
    volumes:
      - ./src:/app/src:ro
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - timosh-network

  redis:
    image: redis:7-alpine
    container_name: timosh-blanks-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - timosh-network
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: timosh-blanks-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
      - nginx_logs:/var/log/nginx
    restart: unless-stopped
    depends_on:
      - webhook
    networks:
      - timosh-network

volumes:
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  timosh-network:
    driver: bridge