#!/usr/bin/env python3
"""–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∞–¥—Ä–µ—Å–Ω–∏–∫–æ–≤ –≤ StockService."""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from datetime import datetime
from src.integrations.keycrm import KeyCRMOrderItem
from src.services.stock_service import StockService

def test_address_tag_filtering():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Ç–æ–≤–∞—Ä–æ–≤ - —Ç–æ–ª—å–∫–æ –∞–¥—Ä–µ—Å–Ω–∏–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è."""
    
    print("üß™ –¢–ï–°–¢ –§–ò–õ–¨–¢–†–ê–¶–ò–ò –ê–î–†–ï–°–ù–ò–ö–û–í")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
    test_items = [
        # –ê–¥—Ä–µ—Å–Ω–∏–∫–∏ - –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è
        KeyCRMOrderItem(
            id=1,
            product_id=1,
            product_name="–ê–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫",
            quantity=1,
            price=150.0,
            total=150.0,
            properties={"–†–æ–∑–º—ñ—Ä": "25 –º–º", "–ö–æ–ª—ñ—Ä": "–∑–æ–ª–æ—Ç–æ"}
        ),
        KeyCRMOrderItem(
            id=2,
            product_id=2,
            product_name="–ê–¥—Ä–µ—Å–Ω–∏–∫ —Ñ—ñ–≥—É—Ä–Ω–∏–π",
            quantity=1,
            price=200.0,
            total=200.0,
            properties={"–§–æ—Ä–º–∞": "—Å–µ—Ä—Ü–µ", "–ö–æ–ª—ñ—Ä": "—Å—Ä—ñ–±–ª–æ"}
        ),
        KeyCRMOrderItem(
            id=3,
            product_id=3,
            product_name="–∂–µ—Ç–æ–Ω –∫—Ä—É–≥–ª–∏–π",
            quantity=1,
            price=120.0,
            total=120.0,
            properties={"–†–æ–∑–º—ñ—Ä": "20 –º–º", "–ö–æ–ª—ñ—Ä": "–∑–æ–ª–æ—Ç–æ"}
        ),
        
        # –ù–ï –∞–¥—Ä–µ—Å–Ω–∏–∫–∏ - –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å—Å—è
        KeyCRMOrderItem(
            id=4,
            product_id=4,
            product_name="–®–Ω—É—Ä–æ–∫",
            quantity=2,
            price=25.0,
            total=50.0,
            properties={"–¶–≤–µ—Ç": "–ß–µ—Ä–≤–æ–Ω–∏–π"}
        ),
        KeyCRMOrderItem(
            id=5,
            product_id=5,
            product_name="–¢–∞–ª—ñ—Å–º–∞–Ω –¥—Ä—É–∂–±–∏",
            quantity=1,
            price=80.0,
            total=80.0,
            properties={"–¶–≤–µ—Ç": "–ë–µ–∂–µ–≤–∏–π", "–í–∏–¥": "DOG"}
        ),
        KeyCRMOrderItem(
            id=6,
            product_id=6,
            product_name="–ü–∞–∫–µ—Ç–∏ —Ä—É–ª–æ–Ω",
            quantity=10,
            price=2.0,
            total=20.0,
            properties={}
        ),
    ]
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä StockService (–±–µ–∑ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ sheets_client)
    stock_service = StockService(sheets_client=None)
    
    print("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–Ω–∏–∫–æ–≤:")
    
    address_tags = []
    non_address_tags = []
    
    for item in test_items:
        is_address_tag = stock_service._is_address_tag_product(item)
        
        if is_address_tag:
            address_tags.append(item)
            print(f"  ‚úÖ '{item.product_name}' - –ê–î–†–ï–°–ù–ò–ö")
        else:
            non_address_tags.append(item)
            print(f"  ‚ùå '{item.product_name}' - –ù–ï –∞–¥—Ä–µ—Å–Ω–∏–∫")
    
    print()
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"  ‚Ä¢ –ê–¥—Ä–µ—Å–Ω–∏–∫–∏: {len(address_tags)} –∏–∑ {len(test_items)}")
    print(f"  ‚Ä¢ –ü—Ä–æ–ø—É—â–µ–Ω–æ: {len(non_address_tags)} –∏–∑ {len(test_items)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    expected_address_tags = {"–ê–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫", "–ê–¥—Ä–µ—Å–Ω–∏–∫ —Ñ—ñ–≥—É—Ä–Ω–∏–π", "–∂–µ—Ç–æ–Ω –∫—Ä—É–≥–ª–∏–π"}
    expected_non_address_tags = {"–®–Ω—É—Ä–æ–∫", "–¢–∞–ª—ñ—Å–º–∞–Ω –¥—Ä—É–∂–±–∏", "–ü–∞–∫–µ—Ç–∏ —Ä—É–ª–æ–Ω"}
    
    actual_address_tag_names = {item.product_name for item in address_tags}
    actual_non_address_tag_names = {item.product_name for item in non_address_tags}
    
    print()
    if actual_address_tag_names == expected_address_tags:
        print("‚úÖ –ê–¥—Ä–µ—Å–Ω–∏–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–Ω–∏–∫–æ–≤:")
        print(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: {expected_address_tags}")
        print(f"   –ü–æ–ª—É—á–∏–ª–æ—Å—å: {actual_address_tag_names}")
    
    if actual_non_address_tag_names == expected_non_address_tags:
        print("‚úÖ –ù–µ-–∞–¥—Ä–µ—Å–Ω–∏–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–æ–ø—É—â–µ–Ω—ã")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–ø—É—Å–∫–µ –Ω–µ-–∞–¥—Ä–µ—Å–Ω–∏–∫–æ–≤:")
        print(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: {expected_non_address_tags}")
        print(f"   –ü–æ–ª—É—á–∏–ª–æ—Å—å: {actual_non_address_tag_names}")
    
    print()
    print("üéØ –í–´–í–û–î:")
    print(f"–°–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ {len(address_tags)} –∞–¥—Ä–µ—Å–Ω–∏–∫–∞ –∏–∑ {len(test_items)} —Ç–æ–≤–∞—Ä–æ–≤.")
    print(f"–û—Å—Ç–∞–ª—å–Ω—ã–µ {len(non_address_tags)} —Ç–æ–≤–∞—Ä–æ–≤ –±—É–¥—É—Ç –ø—Ä–æ–ø—É—â–µ–Ω—ã –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–π.")
    
    return len(address_tags) == 3 and len(non_address_tags) == 3

if __name__ == "__main__":
    success = test_address_tag_filtering()
    if success:
        print("\n‚úÖ –¢–ï–°–¢ –ü–†–û–®–ï–õ –£–°–ü–ï–®–ù–û!")
    else:
        print("\n‚ùå –¢–ï–°–¢ –ù–ï–£–°–ü–ï–®–ï–ù!")
        sys.exit(1)