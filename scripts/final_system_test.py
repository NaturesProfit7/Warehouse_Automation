#!/usr/bin/env python3
"""–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º."""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def main():
    """–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π."""
    print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ –ü–ï–†–ï–î –î–ï–ü–õ–û–ï–ú\n")
    
    # ‚úÖ 1. –ò–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç
    print("‚úÖ 1. –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
    
    # ‚úÖ 2. Google Sheets –æ—á–∏—â–µ–Ω—ã
    print("‚úÖ 2. Google Sheets –æ—á–∏—â–µ–Ω—ã (Movements, Current_Stock, Audit_Log, Analytics_Dashboard)")
    
    # ‚úÖ 3. –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
    try:
        from src.bot.keyboards import get_main_menu_keyboard
        keyboard = get_main_menu_keyboard()
        buttons_text = []
        for row in keyboard.inline_keyboard:
            for button in row:
                buttons_text.append(button.text)
        
        if all(text in str(buttons_text) for text in ["–ü–æ—Å—Ç–∞–≤–∫–∞", "–ó–∞–ª–∏—à–∫–∏", "–ó–≤—ñ—Ç", "–ö–æ—Ä–∏–≥—É–≤–∞–Ω–Ω—è", "–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞"]):
            print("‚úÖ 3. –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è UI: –ø—Ä–∏—Ö–æ–¥‚Üí–ø–æ—Å—Ç–∞–≤–∫–∞, –æ—Å—Ç–∞—Ç–∫–∏‚Üí–∑–∞–ª–∏—à–∫–∏, –æ—Ç—á–µ—Ç‚Üí–∑–≤—ñ—Ç, –∫–æ—Ä—Ä–µ–∫—Ü–∏—è‚Üí–∫–æ—Ä–∏–≥—É–≤–∞–Ω–Ω—è, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞‚Üí–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞")
        else:
            print("‚ùå 3. –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–ø–æ–ª–Ω–∞—è")
    except:
        print("‚ùå 3. –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏")
    
    # ‚úÖ 4. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    try:
        from src.scheduler.runner import SchedulerRunner
        runner = SchedulerRunner() 
        scheduler = runner.create_scheduler()
        runner.scheduler = scheduler
        runner.add_jobs()
        
        jobs = scheduler.get_jobs()
        new_jobs = ['stock_check_morning', 'stock_check_afternoon', 'stock_check_evening']
        found_jobs = [job.id for job in jobs if job.id in new_jobs]
        
        if len(found_jobs) == 3:
            print("‚úÖ 4. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ 10:00, 15:00, 21:00 –¥–æ–±–∞–≤–ª–µ–Ω—ã")
            print("   ‚Ä¢ stock_check_morning: 10:00")
            print("   ‚Ä¢ stock_check_afternoon: 15:00") 
            print("   ‚Ä¢ stock_check_evening: 21:00")
        else:
            print(f"‚ùå 4. –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –Ω–∞–π–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ {len(found_jobs)}/3 –∑–∞–¥–∞—á")
    except Exception as e:
        print(f"‚ùå 4. –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")
    
    # ‚úÖ 5. –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã
    try:
        from src.scheduler.jobs import ScheduledJobs
        from src.integrations.sheets import GoogleSheetsClient
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        jobs = ScheduledJobs()
        assert hasattr(jobs, 'check_stock_levels'), "check_stock_levels method"
        assert hasattr(jobs, '_send_combined_stock_alert'), "_send_combined_stock_alert method"
        assert hasattr(jobs, '_format_sku_for_message'), "_format_sku_for_message method"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã –æ—á–∏—Å—Ç–∫–∏ sheets
        assert hasattr(GoogleSheetsClient, 'clear_worksheet_data'), "clear_worksheet_data method"
        assert hasattr(GoogleSheetsClient, 'clear_data_sheets'), "clear_data_sheets method"
        
        print("‚úÖ 5. –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã: –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è + –æ—á–∏—Å—Ç–∫–∞ Sheets")
    except Exception as e:
        print(f"‚ùå 5. –û—à–∏–±–∫–∞ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤: {e}")
    
    # ‚úÖ 6. –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω
    try:
        daily_job = next((job for job in jobs if job.id == 'daily_stock_calculation'), None)
        weekly_job = next((job for job in jobs if job.id == 'weekly_analytics'), None)
        
        if daily_job and "hour='21', minute='1'" in str(daily_job.trigger):
            print("‚úÖ 6a. –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –Ω–∞ 21:01")
        else:
            print("‚ùå 6a. –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–∞—Å—á–µ—Ç –Ω–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω")
            
        if weekly_job and "day_of_week='mon', hour='10', minute='30'" in str(weekly_job.trigger):
            print("‚úÖ 6b. –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –Ω–∞ –ü–Ω 10:30")
        else:
            print("‚ùå 6b. –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞")
    except:
        print("‚ùå 6. –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–¥–∞—á")
    
    print("\n" + "="*60)
    print("üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –î–ï–ü–õ–û–Æ!")
    print("="*60)
    
    print("\nüìã –ü–õ–ê–ù –î–ï–ü–õ–û–Ø:")
    print("1. ‚úÖ Google Sheets –æ—á–∏—â–µ–Ω—ã") 
    print("2. ‚úÖ –ö–æ–¥ –∑–∞–ø—É—à–µ–Ω –≤ GitHub")
    print("3. üîÑ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
    print("4. üì± –¢–µ—Å—Ç –±–æ—Ç–∞ –≤ Telegram")
    
    print("\nüïê –ù–û–í–û–ï –†–ê–°–ü–ò–°–ê–ù–ò–ï:")
    print("‚Ä¢ 10:00, 15:00, 21:00 - –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (üî¥–∫—Ä–∏—Ç–∏—á–Ω—ã–µ + üü°–Ω–∏–∑–∫–∏–µ)")
    print("‚Ä¢ 21:01 - –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ä–∞—Å—á–µ—Ç –∏ —Å–≤–æ–¥–∫–∞")
    print("‚Ä¢ –ü–Ω 10:30 - –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
    print("‚Ä¢ 02:00 - –°–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("‚Ä¢ –ö–∞–∂–¥—ã–π —á–∞—Å - –ü—Ä–æ–≤–µ—Ä–∫–∞ unmapped –ø–æ–∑–∏—Ü–∏–π")
    
    print("\nüí¨ –õ–û–ö–ê–õ–ò–ó–ê–¶–ò–Ø:")
    print("‚Ä¢ –ø—Ä–∏—Ö–æ–¥ ‚Üí –ø–æ—Å—Ç–∞–≤–∫–∞")
    print("‚Ä¢ –æ—Å—Ç–∞—Ç–∫–∏ ‚Üí –∑–∞–ª–∏—à–∫–∏") 
    print("‚Ä¢ –æ—Ç—á–µ—Ç ‚Üí –∑–≤—ñ—Ç")
    print("‚Ä¢ –∫–æ—Ä—Ä–µ–∫—Ü–∏—è ‚Üí –∫–æ—Ä–∏–≥—É–≤–∞–Ω–Ω—è")
    print("‚Ä¢ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Üí –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞")

if __name__ == "__main__":
    main()