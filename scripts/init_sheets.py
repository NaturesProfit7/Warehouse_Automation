#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets —Å—Ç—Ä—É–∫—Ç—É—Ä—ã."""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from src.integrations.sheets import GoogleSheetsClient
from src.utils.logger import configure_logging, get_logger
from src.config import settings

configure_logging()
logger = get_logger(__name__)


def init_config_sheet(client: GoogleSheetsClient) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏—Å—Ç–∞ Config."""
    worksheet = client._get_worksheet("Config")
    
    headers = ["parameter", "value", "description", "updated_at", "updated_by"]
    
    config_data = [
        ["LEAD_TIME_DAYS", settings.LEAD_TIME_DAYS, "–°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏ –∑–∞–≥–æ—Ç–æ–≤–æ–∫ –≤ –¥–Ω—è—Ö", 
         datetime.now().isoformat(), "system"],
        ["SCRAP_PCT", settings.SCRAP_PCT, "–ü—Ä–æ—Ü–µ–Ω—Ç –±—Ä–∞–∫–∞ (5%)", 
         datetime.now().isoformat(), "system"],
        ["TARGET_COVER_DAYS", settings.TARGET_COVER_DAYS, "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥—É—à–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", 
         datetime.now().isoformat(), "system"],
        ["MIN_STOCK_DEFAULT", settings.MIN_STOCK_DEFAULT, "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", 
         datetime.now().isoformat(), "system"],
        ["PAR_STOCK_DEFAULT", settings.PAR_STOCK_DEFAULT, "–¶–µ–ª–µ–≤–æ–π –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é", 
         datetime.now().isoformat(), "system"],
    ]
    
    data_to_update = [headers] + config_data
    client._batch_update(worksheet, data_to_update)
    logger.info("Initialized Config sheet")


def init_unmapped_items_sheet(client: GoogleSheetsClient) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏—Å—Ç–∞ Unmapped_Items."""
    worksheet = client._get_worksheet("Unmapped_Items")
    
    headers = [
        "datetime", "order_id", "line_id", "product_name", 
        "properties", "suggested_sku", "error_type", "resolution"
    ]
    
    client._batch_update(worksheet, [headers])
    logger.info("Initialized Unmapped_Items sheet")


def init_audit_log_sheet(client: GoogleSheetsClient) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏—Å—Ç–∞ Audit_Log."""
    worksheet = client._get_worksheet("Audit_Log")
    
    headers = [
        "timestamp", "user_id", "user_name", "action", "entity",
        "entity_id", "old_value", "new_value", "source", "ip_address",
        "result", "error_message"
    ]
    
    client._batch_update(worksheet, [headers])
    logger.info("Initialized Audit_Log sheet")


def init_analytics_dashboard_sheet(client: GoogleSheetsClient) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏—Å—Ç–∞ Analytics_Dashboard."""
    worksheet = client._get_worksheet("Analytics_Dashboard")
    
    headers = ["–ú–µ—Ç—Ä–∏–∫–∞", "–ó–Ω–∞—á–µ–Ω–∏–µ", "–¢—Ä–µ–Ω–¥", "–û–ø–∏—Å–∞–Ω–∏–µ"]
    
    analytics_data = [
        ["total_skus", 20, "‚Üí", "–í—Å–µ–≥–æ SKU"],
        ["skus_below_min", 0, "‚Üí", "–ü–æ–¥ –º–∏–Ω–∏–º—É–º–æ–º"],
        ["total_value", "‚Ç¥0", "‚Üí", "–°—Ç–æ–∏–º–æ—Å—Ç—å –æ—Å—Ç–∞—Ç–∫–æ–≤"],
        ["avg_turnover", 0, "‚Üí", "–û–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å"],
        ["stockout_risk", "0%", "‚Üí", "–†–∏—Å–∫ –¥–µ—Ñ–∏—Ü–∏—Ç–∞"],
    ]
    
    data_to_update = [headers] + analytics_data
    client._batch_update(worksheet, data_to_update)
    logger.info("Initialized Analytics_Dashboard sheet")


def init_current_stock_sheet(client: GoogleSheetsClient) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–∏—Å—Ç–∞ Current_Stock."""
    worksheet = client._get_worksheet("Current_Stock")
    
    headers = [
        "blank_sku", "on_hand", "reserved", "available",
        "last_receipt_date", "last_order_date", "avg_daily_usage",
        "days_of_stock", "last_updated"
    ]
    
    # –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö 20 SKU
    stock_data = []
    sku_list = [
        "BLK-BONE-25-GLD", "BLK-BONE-25-SIL", "BLK-BONE-30-GLD", "BLK-BONE-30-SIL",
        "BLK-RING-25-GLD", "BLK-RING-25-SIL", "BLK-RING-30-GLD", "BLK-RING-30-SIL",
        "BLK-ROUND-20-GLD", "BLK-ROUND-20-SIL", "BLK-ROUND-25-GLD", "BLK-ROUND-25-SIL", 
        "BLK-ROUND-30-GLD", "BLK-ROUND-30-SIL",
        "BLK-HEART-25-GLD", "BLK-HEART-25-SIL",
        "BLK-CLOUD-25-GLD", "BLK-CLOUD-25-SIL",
        "BLK-FLOWER-25-GLD", "BLK-FLOWER-25-SIL"
    ]
    
    now = datetime.now().isoformat()
    for sku in sku_list:
        stock_data.append([
            sku, 200, 0, 200, "", "", 0.0, "", now
        ])
    
    data_to_update = [headers] + stock_data
    client._batch_update(worksheet, data_to_update)
    logger.info("Initialized Current_Stock sheet with 20 SKUs")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏."""
    try:
        logger.info("Starting Google Sheets initialization...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        required_vars = ["GSHEETS_ID", "GOOGLE_CREDENTIALS_JSON"]
        missing_vars = [var for var in required_vars if not getattr(settings, var, None)]
        
        if missing_vars:
            logger.error(f"Missing required environment variables: {missing_vars}")
            sys.exit(1)
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
        client = GoogleSheetsClient()
        
        # –°–æ–∑–¥–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã
        logger.info("Creating all worksheets...")
        client.create_all_worksheets()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ª–∏—Å—Ç
        logger.info("Initializing Config sheet...")
        init_config_sheet(client)
        
        logger.info("Initializing Master_Blanks sheet...")
        client.initialize_master_blanks()
        
        logger.info("Initializing Mapping sheet...")
        client.initialize_mapping()
        
        logger.info("Initializing Current_Stock sheet...")
        init_current_stock_sheet(client)
        
        logger.info("Initializing other sheets...")
        init_unmapped_items_sheet(client)
        init_audit_log_sheet(client)
        init_analytics_dashboard_sheet(client)
        
        # –î–≤–∏–∂–µ–Ω–∏—è –∏ –æ—Ç—á–µ—Ç—ã –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        movements_sheet = client._get_worksheet("Movements")
        movements_headers = [
            "id", "datetime", "type", "source_type", "source_id",
            "blank_sku", "qty", "balance_after", "user", "note", "hash"
        ]
        client._batch_update(movements_sheet, [movements_headers])
        
        replenishment_sheet = client._get_worksheet("Replenishment_Report")
        replenishment_headers = [
            "blank_sku", "on_hand", "min_level", "reorder_point", "target_level",
            "need_order", "recommended_qty", "urgency", "estimated_stockout", "last_calculated"
        ]
        client._batch_update(replenishment_sheet, [replenishment_headers])
        
        logger.info("‚úÖ Google Sheets initialization completed successfully!")
        logger.info(f"üìä Sheets ID: {settings.GSHEETS_ID}")
        logger.info("üîó Access your sheets at: https://docs.google.com/spreadsheets/d/" + settings.GSHEETS_ID)
        
    except Exception as e:
        logger.error(f"‚ùå Initialization failed: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()