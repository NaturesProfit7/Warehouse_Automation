#!/usr/bin/env python3
"""–¢–µ—Å—Ç –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç–æ–≤."""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_ports_configuration():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π."""
    print("üîå –¢–µ—Å—Ç–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ—Ä—Ç–æ–≤...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º main_with_scheduler.py
        with open('main_with_scheduler.py', 'r') as f:
            content = f.read()
            
        if '9001' in content and '8000' not in content:
            print("‚úÖ main_with_scheduler.py: –ø–æ—Ä—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 9001")
        else:
            print("‚ùå main_with_scheduler.py: –ø–æ—Ä—Ç –Ω–µ –∏–∑–º–µ–Ω–µ–Ω")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook app
        with open('src/webhook/app.py', 'r') as f:
            content = f.read()
            
        if 'port=9000' in content:
            print("‚úÖ src/webhook/app.py: –ø–æ—Ä—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 9000")
        else:
            print("‚ùå src/webhook/app.py: –ø–æ—Ä—Ç –Ω–µ –∏–∑–º–µ–Ω–µ–Ω")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose.yml
        with open('docker-compose.yml', 'r') as f:
            content = f.read()
            
        if '9000:9000' in content and '9001:9001' in content:
            print("‚úÖ docker-compose.yml: –ø–æ—Ä—Ç—ã 9000 –∏ 9001 –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        else:
            print("‚ùå docker-compose.yml: –ø–æ—Ä—Ç—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å—Ç–∞—Ä—ã–µ –ø–æ—Ä—Ç—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
        if ':8000' not in content:
            print("‚úÖ docker-compose.yml: —Å—Ç–∞—Ä—ã–π –ø–æ—Ä—Ç 8000 —É–¥–∞–ª–µ–Ω")
        else:
            print("‚ùå docker-compose.yml: —Å—Ç–∞—Ä—ã–π –ø–æ—Ä—Ç 8000 –æ—Å—Ç–∞–ª—Å—è")
            return False
            
        print("\n‚úÖ –í—Å–µ –ø–æ—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        print("‚Ä¢ Telegram bot health check: :9001")
        print("‚Ä¢ KeyCRM webhook server: :9000")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤: {e}")
        return False

def test_docker_compose_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã docker-compose.yml."""
    print("\nüê≥ –¢–µ—Å—Ç–∏—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É docker-compose.yml...")
    
    try:
        import yaml
        
        with open('docker-compose.yml', 'r') as f:
            config = yaml.safe_load(f)
            
        services = config.get('services', {})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–≤—É—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        if 'telegram-bot' in services and 'webhook-server' in services:
            print("‚úÖ –î–≤–∞ —Å–µ—Ä–≤–∏—Å–∞ —Å–æ–∑–¥–∞–Ω—ã: telegram-bot, webhook-server")
        else:
            print("‚ùå –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–π–¥–µ–Ω—ã")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞
        telegram_cmd = services['telegram-bot'].get('command', [])
        webhook_cmd = services['webhook-server'].get('command', [])
        
        if 'main_with_scheduler.py' in str(telegram_cmd):
            print("‚úÖ telegram-bot: –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        else:
            print("‚ùå telegram-bot: –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞")
            return False
            
        if 'uvicorn' in str(webhook_cmd) and 'src.webhook.app:app' in str(webhook_cmd):
            print("‚úÖ webhook-server: –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        else:
            print("‚ùå webhook-server: –Ω–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞")
            return False
            
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ docker-compose.yml –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ docker-compose: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    print("üöÄ –¢–µ—Å—Ç –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤...\n")
    
    tests = [
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ—Ä—Ç–æ–≤", test_ports_configuration),
        ("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ Docker Compose", test_docker_compose_structure)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        try:
            if test_func():
                passed += 1
        except Exception as e:
            print(f"‚ùå {test_name} test crashed: {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–æ–≤: {passed}/{total}")
    
    if passed == total:
        print("üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –¥–µ–ø–ª–æ—é!")
        print("\n–ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:")
        print("‚Ä¢ telegram-bot   :9001 (health check)")
        print("‚Ä¢ webhook-server :9000 (KeyCRM webhooks)")
        print("\n–ö–æ–º–∞–Ω–¥—ã –¥–µ–ø–ª–æ—è:")
        print("docker-compose up -d --build")
        print("docker-compose logs -f telegram-bot")
        print("docker-compose logs -f webhook-server")
        return True
    else:
        print("‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π.")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)