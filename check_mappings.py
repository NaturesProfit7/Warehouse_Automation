#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–ø–ø–∏–Ω–≥–æ–≤ –≤ Google Sheets."""

import os
import sys
import json
from dotenv import load_dotenv
import gspread
from google.oauth2.service_account import Credentials

def check_mappings():
    print('üîç –ü–†–û–í–ï–†–ö–ê –ú–ê–ü–ü–ò–ù–ì–û–í –í GOOGLE SHEETS')
    print('='*50)
    
    load_dotenv()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets
    credentials_json = json.loads(os.getenv('GOOGLE_CREDENTIALS_JSON'))
    sheets_id = os.getenv('GSHEETS_ID')
    
    credentials = Credentials.from_service_account_info(
        credentials_json,
        scopes=['https://www.googleapis.com/auth/spreadsheets']
    )
    
    client = gspread.authorize(credentials)
    spreadsheet = client.open_by_key(sheets_id)
    
    try:
        worksheet = spreadsheet.worksheet("Mapping")
        records = worksheet.get_all_records()
        
        print(f'üìã –í—Å–µ–≥–æ –º–∞–ø–ø–∏–Ω–≥–æ–≤: {len(records)}')
        print()
        
        # –ü–æ–∏—Å–∫ –º–∞–ø–ø–∏–Ω–≥–æ–≤ –¥–ª—è –∞–¥—Ä–µ—Å–Ω–∏–∫–æ–≤
        addressnik_mappings = [
            r for r in records 
            if '–∞–¥—Ä–µ—Å–Ω–∏–∫' in r.get('product_name', '').lower() or 
               'ring' in r.get('sku', '').lower() or
               'BLK' in r.get('sku', '').upper()
        ]
        
        if addressnik_mappings:
            print('üéØ –ú–ê–ü–ü–ò–ù–ì–ò –î–õ–Ø –ê–î–†–ï–°–ù–ò–ö–û–í:')
            for i, mapping in enumerate(addressnik_mappings, 1):
                print(f'  {i}. "{mapping.get("product_name", "")}"')
                print(f'     ‚Ä¢ SKU: {mapping.get("sku", "")}')
                print(f'     ‚Ä¢ Size: {mapping.get("size", "")}')
                print(f'     ‚Ä¢ Metal Color: {mapping.get("metal_color", "")}')
                print(f'     ‚Ä¢ Design: {mapping.get("design", "")}')
                print()
        else:
            print('‚ùå –ù–ï–¢ –ú–ê–ü–ü–ò–ù–ì–û–í –î–õ–Ø –ê–î–†–ï–°–ù–ò–ö–û–í!')
            
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤—ã—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤
        print('üìã –°–¢–†–£–ö–¢–£–†–ê –ú–ê–ü–ü–ò–ù–ì–û–í (–ø–µ—Ä–≤—ã–µ 3):')
        for i, mapping in enumerate(records[:3], 1):
            print(f'  {i}. "{mapping.get("product_name", "")}"')
            print(f'     ‚Ä¢ SKU: {mapping.get("sku", "")}')
            print(f'     ‚Ä¢ Size: {mapping.get("size", "")}')
            print(f'     ‚Ä¢ Metal Color: {mapping.get("metal_color", "")}')
            print(f'     ‚Ä¢ Design: {mapping.get("design", "")}')
            print(f'     ‚Ä¢ All keys: {list(mapping.keys())}')
            print()
            
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –∏—â–µ–º —Ç–æ–≤–∞—Ä "–ê–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫"
        exact_matches = [
            r for r in records 
            if r.get('product_name', '').strip().lower() == '–∞–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫'
        ]
        
        if exact_matches:
            print('‚úÖ –ù–ê–ô–î–ï–ù –¢–û–ß–ù–´–ô –ú–ê–ü–ü–ò–ù–ì –î–õ–Ø "–ê–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫":')
            for mapping in exact_matches:
                print(f'   ‚Ä¢ SKU: {mapping.get("sku", "")}')
                print(f'   ‚Ä¢ Properties: size={mapping.get("size", "")}, metal_color={mapping.get("metal_color", "")}, design={mapping.get("design", "")}')
        else:
            print('‚ùå –ù–ï–¢ –¢–û–ß–ù–û–ì–û –ú–ê–ü–ü–ò–ù–ì–ê –î–õ–Ø "–ê–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫"')
            
        return records
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ Mapping: {e}')
        return []

if __name__ == "__main__":
    check_mappings()