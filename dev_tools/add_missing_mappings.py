#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤ KeyCRM –ø—Ä–æ–¥—É–∫—Ç–æ–≤."""

from datetime import datetime

from src.integrations.sheets import get_sheets_client
from src.core.models import ProductMapping
from src.utils.logger import get_logger

logger = get_logger(__name__)


def add_missing_mappings() -> None:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å 'x1'.
    """
    try:
        logger.info("Starting to add missing product mappings...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Google Sheets
        sheets_client = get_sheets_client()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏
        existing_mappings = sheets_client.get_product_mappings()
        
        print(f"\nüìã –¢–µ–∫—É—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏: {len(existing_mappings)}")
        
        # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥–∏ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å "x1"
        new_mappings = []
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        base_mappings = [
            ("–ê–¥—Ä–µ—Å–Ω–∏–∫", "–ê–¥—Ä–µ—Å–Ω–∏–∫ x1"),
            ("–ê–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫", "–ê–¥—Ä–µ—Å–Ω–∏–∫ –±—É–±–ª–∏–∫ x1"),  
            ("–ê–¥—Ä–µ—Å–Ω–∏–∫ –∫—ñ—Å—Ç–∫–∞", "–ê–¥—Ä–µ—Å–Ω–∏–∫ –∫—ñ—Å—Ç–∫–∞ x1"),
            ("–ê–¥—Ä–µ—Å–Ω–∏–∫ —Ñ—ñ–≥—É—Ä–Ω–∏–π", "–ê–¥—Ä–µ—Å–Ω–∏–∫ —Ñ—ñ–≥—É—Ä–Ω–∏–π x1")
        ]
        
        for existing in existing_mappings:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞–ø–ø–∏–Ω–≥
            for base_name, x1_variant in base_mappings:
                if existing.product_name == base_name:
                    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ –¥–ª—è x1 –≤–∞—Ä–∏–∞–Ω—Ç–∞
                    x1_mapping = ProductMapping(
                        product_name=x1_variant,
                        size_property=existing.size_property,
                        metal_color=existing.metal_color,
                        blank_sku=existing.blank_sku,  # –¢–æ—Ç –∂–µ SKU!
                        qty_per_unit=existing.qty_per_unit,
                        priority=existing.priority,
                        active=existing.active
                    )
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –º–∞–ø–ø–∏–Ω–≥
                    already_exists = any(
                        m.product_name == x1_variant and
                        m.size_property == existing.size_property and
                        m.metal_color == existing.metal_color
                        for m in existing_mappings
                    )
                    
                    if not already_exists:
                        new_mappings.append(x1_mapping)
                        print(f"  ‚úÖ {x1_variant} | {existing.size_property} | {existing.metal_color} ‚Üí {existing.blank_sku}")
                    else:
                        print(f"  ‚ö†Ô∏è  –ú–∞–ø–ø–∏–Ω–≥ {x1_variant} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        if new_mappings:
            print(f"\nüîß –î–æ–±–∞–≤–ª—è–µ–º {len(new_mappings)} –Ω–æ–≤—ã—Ö –º–∞–ø–ø–∏–Ω–≥–æ–≤...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–∞–ø–ø–∏–Ω–≥–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ —Ç–∞–±–ª–∏—Ü—É
            worksheet = sheets_client._get_worksheet("Mapping")
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            rows_data = []
            for mapping in new_mappings:
                row_data = [
                    mapping.product_name,
                    mapping.size_property, 
                    mapping.metal_color,
                    mapping.blank_sku,
                    mapping.qty_per_unit,
                    mapping.active,
                    mapping.priority,
                    datetime.now().isoformat()
                ]
                rows_data.append(row_data)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
            worksheet.append_rows(rows_data)
            
            print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {len(new_mappings)} –º–∞–ø–ø–∏–Ω–≥–æ–≤!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –º–∞–ø–ø–∏–Ω–≥–∏
            print(f"\nüìù –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –º–∞–ø–ø–∏–Ω–≥–∏:")
            for i, mapping in enumerate(new_mappings, 1):
                print(f"  {i:2d}. '{mapping.product_name}' | '{mapping.size_property}' | '{mapping.metal_color}' ‚Üí {mapping.blank_sku}")
                
        else:
            print(f"\n‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞–ø–ø–∏–Ω–≥–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_mappings = len(existing_mappings) + len(new_mappings)
        print(f"\nüìä –ò—Ç–æ–≥–æ –º–∞–ø–ø–∏–Ω–≥–æ–≤: {total_mappings} (–±—ã–ª–æ: {len(existing_mappings)}, –¥–æ–±–∞–≤–ª–µ–Ω–æ: {len(new_mappings)})")
        
    except Exception as e:
        logger.error(f"Failed to add missing mappings: {e}")
        raise


def show_mapping_summary() -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–¥–∫—É –ø–æ –º–∞–ø–ø–∏–Ω–≥–∞–º."""
    try:
        logger.info("Showing mapping summary...")
        sheets_client = get_sheets_client()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–∞–ø–ø–∏–Ω–≥–∏
        mappings = sheets_client.get_product_mappings()
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –±–∞–∑–æ–≤—ã–º —Ç–∏–ø–∞–º
        groups = {}
        for mapping in mappings:
            base_name = mapping.product_name.replace(" x1", "")
            if base_name not in groups:
                groups[base_name] = []
            groups[base_name].append(mapping)
        
        print(f"\nüìã –°–í–û–î–ö–ê –ü–û –ú–ê–ü–ü–ò–ù–ì–ê–ú ({len(mappings)} –≤—Å–µ–≥–æ):")
        
        for base_name in sorted(groups.keys()):
            group_mappings = groups[base_name]
            print(f"\n  üè∑Ô∏è  {base_name}: {len(group_mappings)} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")
            
            for mapping in sorted(group_mappings, key=lambda x: (x.size_property, x.metal_color)):
                variant_marker = " x1" if " x1" in mapping.product_name else ""
                status = "‚úÖ" if mapping.active else "‚ùå"
                print(f"    {status} {mapping.product_name} | {mapping.size_property} | {mapping.metal_color} ‚Üí {mapping.blank_sku}")
        
    except Exception as e:
        logger.error(f"Failed to show mapping summary: {e}")


if __name__ == "__main__":
    try:
        print("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–æ–≤")
        print("2 - –î–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏ –¥–ª—è x1 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")
        print("3 - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–≤–æ–¥–∫—É")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1/2/3): ").strip()
        
        if choice == "1":
            sheets_client = get_sheets_client()
            mappings = sheets_client.get_product_mappings()
            print(f"\nüìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–ø–ø–∏–Ω–≥–æ–≤: {len(mappings)}")
            
        elif choice == "2":
            confirmation = input(f"\n–î–æ–±–∞–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ x1 –º–∞–ø–ø–∏–Ω–≥–∏? (–¥–∞/–Ω–µ—Ç): ")
            if confirmation.lower() in ["–¥–∞", "yes", "y"]:
                add_missing_mappings()
            else:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                
        elif choice == "3":
            show_mapping_summary()
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            
    except KeyboardInterrupt:
        logger.info("Operation cancelled by user")
    except Exception as e:
        logger.error(f"Operation failed: {e}")
        import sys
        sys.exit(1)