#!/usr/bin/env python3
"""–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–∞ 4509 –æ—Ç KeyCRM."""

import asyncio
import sys
import os
sys.path.append('src')

async def debug_order_4509():
    print('üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ö–ê–ó–ê 4509')
    print('='*60)
    
    # –ü—Ä—è–º–æ–π HTTP –∑–∞–ø—Ä–æ—Å –∫ KeyCRM API
    import httpx
    from dotenv import load_dotenv
    
    load_dotenv()
    token = os.getenv('KEYCRM_API_TOKEN')
    
    print(f'üîë API Token: {token[:20]}...')
    print()
    
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }
    
    base_url = 'https://openapi.keycrm.app/v1'
    
    async with httpx.AsyncClient(base_url=base_url, timeout=10.0) as client:
        # –ó–∞–ø—Ä–æ—Å –∑–∞–∫–∞–∑–∞ –ë–ï–ó –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ with
        print('1Ô∏è‚É£ –ó–ê–ü–†–û–° –ë–ï–ó –ü–ê–†–ê–ú–ï–¢–†–ê with=items')
        try:
            response = await client.get(f'/order/4509', headers=headers)
            print(f'Status Code: {response.status_code}')
            
            if response.status_code == 200:
                data = response.json()
                print('üìã –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –∑–∞–∫–∞–∑–∞:')
                print(f'   ID: {data.get("id")}')
                print(f'   Status ID: {data.get("status_id")}')
                print(f'   Grand Total: {data.get("grand_total")}')
                print(f'   Products Total: {data.get("products_total")}')
                print(f'   Client ID: {data.get("client_id")}')
                print()
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª–µ order_items
                order_items = data.get('order_items', [])
                print(f'üì¶ order_items field: {len(order_items)} items')
                
                if order_items:
                    print('   –ü–æ–∑–∏—Ü–∏–∏:')
                    for item in order_items:
                        print(f'     ‚Ä¢ {item.get("product_name")} x {item.get("quantity")}')
                else:
                    print('   ‚ùå –ü–æ–ª–µ order_items –ø—É—Å—Ç–æ–µ')
                
                # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –∫–ª—é—á–∏ –≤ –æ—Ç–≤–µ—Ç–µ
                print(f'üîç –í—Å–µ –∫–ª—é—á–∏ –≤ –æ—Ç–≤–µ—Ç–µ: {list(data.keys())}')
            else:
                print(f'‚ùå –û—à–∏–±–∫–∞: {response.status_code}')
                print(f'Response: {response.text}')
                
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ with: {e}')
        
        print()
        print('2Ô∏è‚É£ –ó–ê–ü–†–û–° –° –ü–ê–†–ê–ú–ï–¢–†–û–ú with=items')
        try:
            response = await client.get(f'/order/4509', headers=headers, params={'with': 'items'})
            print(f'Status Code: {response.status_code}')
            
            if response.status_code == 200:
                data = response.json()
                order_items = data.get('order_items', [])
                print(f'üì¶ –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º with=items: {len(order_items)} items')
                
                if order_items:
                    print('   –ü–æ–∑–∏—Ü–∏–∏:')
                    for item in order_items:
                        print(f'     ‚Ä¢ Product ID: {item.get("product_id")}')
                        print(f'     ‚Ä¢ Name: {item.get("product_name")}')
                        print(f'     ‚Ä¢ Quantity: {item.get("quantity")}')
                        print(f'     ‚Ä¢ Price: {item.get("price")}')
                        print()
                else:
                    print('   ‚ùå –í—Å—ë –µ—â—ë –Ω–µ—Ç –ø–æ–∑–∏—Ü–∏–π')
            else:
                print(f'‚ùå –û—à–∏–±–∫–∞: {response.status_code}')
                print(f'Response: {response.text}')
                
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å with: {e}')

if __name__ == "__main__":
    asyncio.run(debug_order_4509())