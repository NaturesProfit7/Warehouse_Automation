#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –¥–≤–∏–∂–µ–Ω–∏–π (movements) –∏–∑ Google Sheets."""

from src.integrations.sheets import get_sheets_client
from src.utils.logger import get_logger

logger = get_logger(__name__)


def clear_movements() -> None:
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Movements, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏."""
    try:
        logger.info("Starting to clear all movements...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Google Sheets
        sheets_client = get_sheets_client()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á–∏–π –ª–∏—Å—Ç Movements
        worksheet = sheets_client._get_worksheet("Movements")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏
        all_records = worksheet.get_all_records()
        total_records = len(all_records)
        
        logger.info(f"Found {total_records} movement records to delete")
        
        if total_records > 0:
            # –û—á–∏—â–∞–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ (–Ω–∞—á–∏–Ω–∞—è —Å–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏)
            if worksheet.row_count > 1:
                # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫)
                worksheet.delete_rows(2, worksheet.row_count)
                logger.info(f"‚úÖ Deleted {total_records} movement records")
            else:
                logger.info("No data rows to delete")
        else:
            logger.info("Movements table is already empty")
        
        print(f"\nüßπ –û—á–∏—Å—Ç–∫–∞ movements –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"‚ùå –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {total_records}")
        print(f"üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        
    except Exception as e:
        logger.error(f"Failed to clear movements: {e}")
        raise


def show_movements_count() -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–≤–∏–∂–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ."""
    try:
        logger.info("Checking movements count...")
        sheets_client = get_sheets_client()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á–∏–π –ª–∏—Å—Ç Movements
        worksheet = sheets_client._get_worksheet("Movements")
        all_records = worksheet.get_all_records()
        
        print(f"\nüìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Movements:")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(all_records)}")
        
        if all_records:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π
            print(f"\n   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
            for i, record in enumerate(all_records[-5:], 1):
                sku = record.get('blank_sku', 'N/A')
                qty = record.get('qty', 'N/A') 
                date = record.get('datetime', 'N/A')
                print(f"     {i}. {sku}: {qty} ({date})")
        else:
            print(f"   üì≠ –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")
            
    except Exception as e:
        logger.error(f"Failed to show movements count: {e}")


if __name__ == "__main__":
    try:
        print("üßπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–µ–π Movements")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π")
        print("2 - –û–ß–ò–°–¢–ò–¢–¨ –í–°–ï –¥–≤–∏–∂–µ–Ω–∏—è")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1/2): ").strip()
        
        if choice == "1":
            show_movements_count()
        elif choice == "2":
            show_movements_count()  # –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –µ—Å—Ç—å
            
            confirmation = input(f"\n‚ö†Ô∏è  –£–î–ê–õ–ò–¢–¨ –í–°–ï –¥–≤–∏–∂–µ–Ω–∏—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å! (–¥–∞/–Ω–µ—Ç): ")
            
            if confirmation.lower() in ["–¥–∞", "yes", "y"]:
                clear_movements()
            else:
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            
    except KeyboardInterrupt:
        logger.info("Operation cancelled by user")
    except Exception as e:
        logger.error(f"Operation failed: {e}")
        import sys
        sys.exit(1)