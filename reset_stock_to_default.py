#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –≤—Å–µ—Ö SKU –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."""

from datetime import date, datetime
from typing import List

from src.integrations.sheets import get_sheets_client
from src.core.models import CurrentStock
from src.utils.logger import get_logger

logger = get_logger(__name__)


def reset_stock_to_default(default_quantity: int = 200) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –≤—Å–µ—Ö SKU –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
    
    Args:
        default_quantity: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö SKU
    """
    try:
        logger.info(f"Resetting all stock to default quantity: {default_quantity}")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Google Sheets
        sheets_client = get_sheets_client()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–∞—Å—Ç–µ—Ä-–∑–∞–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ SKU
        master_blanks = sheets_client.get_master_blanks()
        logger.info(f"Found {len(master_blanks)} master blanks")
        
        # –°–æ–∑–¥–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        stocks_to_update = []
        
        for blank in master_blanks:
            if blank.active:  # –¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ SKU
                stock = CurrentStock(
                    blank_sku=blank.blank_sku,
                    on_hand=default_quantity,
                    reserved=0,
                    available=default_quantity,
                    last_receipt_date=None,
                    last_order_date=None,
                    avg_daily_usage=0.0,
                    days_of_stock=None,
                    last_updated=datetime.now()
                )
                stocks_to_update.append(stock)
        
        logger.info(f"Prepared {len(stocks_to_update)} stock records for update")
        
        if stocks_to_update:
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –≤ Google Sheets
            sheets_client.update_current_stock(stocks_to_update)
            logger.info(f"‚úÖ Updated stock for {len(stocks_to_update)} SKUs")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ SKU
            print("\nüì¶ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–∏:")
            for stock in stocks_to_update:
                print(f"  {stock.blank_sku}: {stock.on_hand} —à—Ç")
            
        print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"üìä –í—Å–µ–≥–æ SKU –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {len(stocks_to_update)}")
        print(f"üíØ –û—Å—Ç–∞—Ç–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {default_quantity} —à—Ç")
        
    except Exception as e:
        logger.error(f"Failed to reset stock: {e}")
        raise


def show_current_stock() -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ –≤—Å–µ—Ö SKU."""
    try:
        logger.info("Retrieving current stock...")
        sheets_client = get_sheets_client()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏
        current_stocks = sheets_client.get_current_stock()
        
        if current_stocks:
            print("\nüìä –¢–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏:")
            for stock in sorted(current_stocks, key=lambda x: x.blank_sku):
                print(f"  {stock.blank_sku}: {stock.on_hand} —à—Ç (–¥–æ—Å—Ç—É–ø–Ω–æ: {stock.available})")
        else:
            print("\nüì≠ –û—Å—Ç–∞—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        logger.error(f"Failed to show current stock: {e}")


if __name__ == "__main__":
    try:
        print("üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞–º–∏ —Å–∫–ª–∞–¥–∞")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏")
        print("2 - –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1/2): ").strip()
        
        if choice == "1":
            show_current_stock()
        elif choice == "2":
            default_qty = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (200): ") or "200")
            confirmation = input(f"–û–±–Ω–æ–≤–∏—Ç—å –í–°–ï –æ—Å—Ç–∞—Ç–∫–∏ –Ω–∞ {default_qty} —à—Ç? (–¥–∞/–Ω–µ—Ç): ")
            
            if confirmation.lower() in ["–¥–∞", "yes", "y"]:
                reset_stock_to_default(default_qty)
            else:
                print("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            
    except KeyboardInterrupt:
        logger.info("Operation cancelled by user")
    except Exception as e:
        logger.error(f"Operation failed: {e}")
        import sys
        sys.exit(1)