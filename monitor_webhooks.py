#!/usr/bin/env python3
"""–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ webhook —Å–æ–±—ã—Ç–∏–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏."""

import asyncio
import httpx
import json
from datetime import datetime

async def monitor_webhook_server():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ webhook —Å–µ—Ä–≤–µ—Ä–∞."""
    
    print("üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì WEBHOOK –°–û–ë–´–¢–ò–ô")
    print("="*50)
    print("–û–∂–∏–¥–∞–µ–º webhook –æ—Ç KeyCRM...")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print()
    
    base_url = "http://localhost:8000"
    last_check = datetime.now()
    
    try:
        while True:
            try:
                async with httpx.AsyncClient(timeout=5.0) as client:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
                    response = await client.get(f"{base_url}/health")
                    
                    if response.status_code == 200:
                        data = response.json()
                        current_time = datetime.now().strftime("%H:%M:%S")
                        
                        print(f"\r‚è∞ {current_time} - –°–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω | Status: {data.get('status', 'unknown')}", end="", flush=True)
                    else:
                        print(f"\r‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}", end="", flush=True)
                        
            except Exception as e:
                print(f"\r‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)[:50]}", end="", flush=True)
            
            # –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            await asyncio.sleep(2)
            
    except KeyboardInterrupt:
        print(f"\n\nüìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

async def check_recent_orders():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ KeyCRM."""
    
    import os
    from dotenv import load_dotenv
    
    load_dotenv()
    token = os.getenv('KEYCRM_API_TOKEN')
    
    if not token:
        print("‚ùå API —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    headers = {
        'Authorization': f'Bearer {token}',
        'Accept': 'application/json'
    }
    
    base_url = 'https://openapi.keycrm.app/v1'
    
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –ü–û–°–õ–ï–î–ù–ò–• –ó–ê–ö–ê–ó–û–í KeyCRM")
    print("="*50)
    
    try:
        async with httpx.AsyncClient(base_url=base_url, timeout=10.0) as client:
            response = await client.get('/order', headers=headers, params={'limit': 5})
            
            if response.status_code == 200:
                data = response.json()
                orders = data.get('data', [])
                
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
                print()
                
                for i, order in enumerate(orders, 1):
                    order_id = order.get('id')
                    status_id = order.get('status_id')
                    total = order.get('grand_total')
                    created = order.get('created_at', '')[:19]
                    products_total = order.get('products_total', 0)
                    
                    print(f"{i}. Order {order_id}")
                    print(f"   üí∞ Total: {total} | Products: {products_total}")
                    print(f"   üìä Status ID: {status_id}")
                    print(f"   üìÖ Created: {created}")
                    
                    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã, –ø–æ–∫–∞–∂–µ–º —ç—Ç–æ
                    if products_total > 0:
                        print(f"   üì¶ HAS PRODUCTS - —Ö–æ—Ä–æ—à–∏–π –∫–∞–Ω–¥–∏–¥–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∞!")
                    else:
                        print(f"   ‚ö™ No products")
                    print()
                    
                return orders
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤: {response.status_code}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return []

if __name__ == "__main__":
    print("üöÄ –ü–û–î–ì–û–¢–û–í–ö–ê –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ –ù–ê –†–ï–ê–õ–¨–ù–û–ú –ó–ê–ö–ê–ó–ï")
    print("="*60)
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã
    recent_orders = asyncio.run(check_recent_orders())
    
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä –≤ KeyCRM (–µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–ª–∏)")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —Ç–æ–≤–∞—Ä–∞–º–∏")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: python monitor_webhooks.py")
    print("4. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print()
    print("üîó Webhook URL –¥–ª—è KeyCRM:")
    print("   https://witty-vans-cheer.loca.lt/webhook/keycrm")
    print()
    
    # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    try:
        asyncio.run(monitor_webhook_server())
    except KeyboardInterrupt:
        print("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω")