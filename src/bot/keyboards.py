"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è Telegram –±–æ—Ç–∞."""

from typing import List, Optional

from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton
)

from ..core.models import BlankType, BlankColor


def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞."""
    
    buttons = [
        [
            InlineKeyboardButton(text="‚ûï –ü—Ä–∏—Ö–æ–¥", callback_data="receipt"),
            InlineKeyboardButton(text="üì¶ –û—Å—Ç–∞—Ç–∫–∏", callback_data="stock")
        ],
        [
            InlineKeyboardButton(text="üìä –û—Ç—á–µ—Ç", callback_data="report"),
            InlineKeyboardButton(text="‚öôÔ∏è –ö–æ—Ä—Ä–µ–∫—Ü–∏—è", callback_data="correction")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_cancel_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏."""
    
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
        ]]
    )


def get_blank_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∑–∞–≥–æ—Ç–æ–≤–∫–∏."""
    
    buttons = [
        [InlineKeyboardButton(text="ü¶¥ –ö—ñ—Å—Ç–∫–∞", callback_data="type_BONE")],
        [InlineKeyboardButton(text="üü¢ –ë—É–±–ª–∏–∫", callback_data="type_RING")],
        [InlineKeyboardButton(text="‚ö™ –ö—Ä—É–≥–ª–∏–π", callback_data="type_ROUND")],
        [InlineKeyboardButton(text="‚ù§Ô∏è –§—ñ–≥—É—Ä–Ω–∏–π", callback_data="type_SHAPED")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_bone_size_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –∫–æ—Å—Ç–∏."""
    
    buttons = [
        [InlineKeyboardButton(text="25 –º–º (–º–∞–ª–µ–Ω—å–∫–∞)", callback_data="size_25")],
        [InlineKeyboardButton(text="30 –º–º (–≤–µ–ª–∏–∫–∞)", callback_data="size_30")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_type")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_ring_size_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –±—É–±–ª–∏–∫–∞."""
    
    buttons = [
        [InlineKeyboardButton(text="25 –º–º", callback_data="size_25")],
        [InlineKeyboardButton(text="30 –º–º", callback_data="size_30")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_type")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_round_size_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –∫—Ä—É–≥–ª–æ–≥–æ."""
    
    buttons = [
        [InlineKeyboardButton(text="20 –º–º", callback_data="size_20")],
        [InlineKeyboardButton(text="25 –º–º", callback_data="size_25")],
        [InlineKeyboardButton(text="30 –º–º", callback_data="size_30")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_type")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_shaped_form_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º—ã —Ñ–∏–≥—É—Ä–Ω–æ–≥–æ."""
    
    buttons = [
        [InlineKeyboardButton(text="‚ù§Ô∏è –°–µ—Ä—Ü–µ", callback_data="shape_HEART")],
        [InlineKeyboardButton(text="üå∏ –ö–≤—ñ—Ç–∫–∞", callback_data="shape_FLOWER")],
        [InlineKeyboardButton(text="‚òÅÔ∏è –•–º–∞—Ä–∫–∞", callback_data="shape_CLOUD")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_type")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_color_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞."""
    
    buttons = [
        [
            InlineKeyboardButton(text="üü° –ó–æ–ª–æ—Ç–æ", callback_data="color_GLD"),
            InlineKeyboardButton(text="‚ö™ –°—Ä—ñ–±–ª–æ", callback_data="color_SIL")
        ],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_size")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_confirmation_keyboard(large_quantity: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏."""
    
    text_prefix = "‚ö†Ô∏è " if large_quantity else ""
    
    buttons = [
        [
            InlineKeyboardButton(text="‚úÖ –¢–∞–∫", callback_data="confirm_yes"),
            InlineKeyboardButton(text="‚ùå –ù—ñ", callback_data="confirm_no")
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_report_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞."""
    
    buttons = [
        [InlineKeyboardButton(text="üìã –ö–æ—Ä–æ—Ç–∫–∏–π –∑–≤—ñ—Ç", callback_data="report_short")],
        [InlineKeyboardButton(text="üìÑ –ü–æ–≤–Ω–∏–π –∑–≤—ñ—Ç", callback_data="report_full")],
        [InlineKeyboardButton(text="üî¥ –ö—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó", callback_data="report_critical")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_correction_type_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏."""
    
    buttons = [
        [InlineKeyboardButton(text="‚ûï –î–æ–¥–∞—Ç–∏", callback_data="correction_add")],
        [InlineKeyboardButton(text="‚ûñ –í–∏—Ä–∞—Ö—É–≤–∞—Ç–∏", callback_data="correction_subtract")],
        [InlineKeyboardButton(text="üîÑ –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ç–æ—á–Ω–æ", callback_data="correction_set")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_sku_selection_keyboard(skus: List[str]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ SKU –∏–∑ —Å–ø–∏—Å–∫–∞."""
    
    buttons = []
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    types_order = ["BONE", "RING", "ROUND", "HEART", "FLOWER", "CLOUD"]
    grouped_skus = {}
    
    for sku in skus:
        sku_type = sku.split('-')[1]
        if sku_type not in grouped_skus:
            grouped_skus[sku_type] = []
        grouped_skus[sku_type].append(sku)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ —Ç–∏–ø–æ–≤
    for sku_type in types_order:
        if sku_type in grouped_skus:
            for sku in sorted(grouped_skus[sku_type]):
                # –ö—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ SKU
                display_name = _format_sku_for_display(sku)
                buttons.append([InlineKeyboardButton(
                    text=display_name, 
                    callback_data=f"sku_{sku}"
                )])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    buttons.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def _format_sku_for_display(sku: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SKU –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    
    parts = sku.split('-')
    if len(parts) != 4:
        return sku
        
    _, sku_type, size, color = parts
    
    # –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–æ–≤
    type_mapping = {
        "BONE": "ü¶¥ –ö—ñ—Å—Ç–∫–∞",
        "RING": "üü¢ –ë—É–±–ª–∏–∫", 
        "ROUND": "‚ö™ –ö—Ä—É–≥–ª–∏–π",
        "HEART": "‚ù§Ô∏è –°–µ—Ä—Ü–µ",
        "FLOWER": "üå∏ –ö–≤—ñ—Ç–∫–∞",
        "CLOUD": "‚òÅÔ∏è –•–º–∞—Ä–∫–∞"
    }
    
    # –ú–∞–ø–ø–∏–Ω–≥ —Ü–≤–µ—Ç–æ–≤
    color_mapping = {
        "GLD": "üü°",
        "SIL": "‚ö™"
    }
    
    type_display = type_mapping.get(sku_type, sku_type)
    color_display = color_mapping.get(color, color)
    
    return f"{type_display} {size}–º–º {color_display}"


def get_back_keyboard() -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥."""
    
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
        ]]
    )